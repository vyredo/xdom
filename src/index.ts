import { HTMLElementTagMap } from "./types";
import { createDomElement, CreateElementChildren, CreateElementAttribute } from "./xdom";

/**
 * When the first parameter is an object like it will only be inferred as CreateElementAttribute,
 * else if it's an array it will be inferred as CreateElementChildren.
 * primitive type like string, number is not allowed except undefined
 */
declare function ambientCreateDomElement<T extends keyof HTMLElementTagMap, K extends keyof HTMLElementTagMap>(
  attributeOrChildren: CreateElementAttribute<T> | CreateElementChildren<K>
): HTMLElementTagMap[T];

declare function ambientCreateDomElement<T extends keyof HTMLElementTagMap, K extends keyof HTMLElementTagMap>(
  attribute: CreateElementAttribute<T>,
  children: CreateElementChildren<K>
): HTMLElementTagMap[T];

function createDomElementBound<T extends keyof HTMLElementTagMap, K extends keyof HTMLElementTagMap>(tagName: T): typeof ambientCreateDomElement<T, K> {
  return (arg1: CreateElementAttribute<T> | CreateElementChildren<K>, arg2?: CreateElementChildren<K>) => {
    // case where there is only one argument
    if (arg2 == null) {
      if (Array.isArray(arg1) || typeof arg1 === "string") {
        return createDomElement(tagName, undefined, arg1 as CreateElementChildren<T>) as HTMLElementTagMap[T];
      }
      return createDomElement(tagName, arg1 as CreateElementAttribute<T>, undefined) as HTMLElementTagMap[T];
    } else {
      // Two arguments: treat as attribute, children
      return createDomElement(tagName, arg1 as CreateElementAttribute<T>, arg2 as CreateElementChildren<T>) as HTMLElementTagMap[T];
    }
  };
}

// Map Correct type
export const xdom = {
  a: createDomElementBound("a"),
  abbr: createDomElementBound("abbr"),
  address: createDomElementBound("address"),
  area: createDomElementBound("area"),
  article: createDomElementBound("article"),
  aside: createDomElementBound("aside"),
  audio: createDomElementBound("audio"),
  b: createDomElementBound("b"),
  base: createDomElementBound("base"),
  bdi: createDomElementBound("bdi"),
  bdo: createDomElementBound("bdo"),
  blockquote: createDomElementBound("blockquote"),
  body: createDomElementBound("body"),
  br: createDomElementBound("br"),
  button: createDomElementBound("button"),
  canvas: createDomElementBound("canvas"),
  caption: createDomElementBound("caption"),
  cite: createDomElementBound("cite"),
  code: createDomElementBound("code"),
  col: createDomElementBound("col"),
  colgroup: createDomElementBound("colgroup"),
  data: createDomElementBound("data"),
  datalist: createDomElementBound("datalist"),
  dd: createDomElementBound("dd"),
  del: createDomElementBound("del"),
  details: createDomElementBound("details"),
  dfn: createDomElementBound("dfn"),
  dialog: createDomElementBound("dialog"),
  div: createDomElementBound("div"),
  dl: createDomElementBound("dl"),
  dt: createDomElementBound("dt"),
  em: createDomElementBound("em"),
  embed: createDomElementBound("embed"),
  fieldset: createDomElementBound("fieldset"),
  figcaption: createDomElementBound("figcaption"),
  figure: createDomElementBound("figure"),
  footer: createDomElementBound("footer"),
  form: createDomElementBound("form"),
  h1: createDomElementBound("h1"),
  h2: createDomElementBound("h2"),
  h3: createDomElementBound("h3"),
  h4: createDomElementBound("h4"),
  h5: createDomElementBound("h5"),
  h6: createDomElementBound("h6"),
  head: createDomElementBound("head"),
  header: createDomElementBound("header"),
  hgroup: createDomElementBound("hgroup"),
  hr: createDomElementBound("hr"),
  html: createDomElementBound("html"),
  i: createDomElementBound("i"),
  iframe: createDomElementBound("iframe"),
  img: createDomElementBound("img"),
  input: createDomElementBound("input"),
  ins: createDomElementBound("ins"),
  kbd: createDomElementBound("kbd"),
  label: createDomElementBound("label"),
  legend: createDomElementBound("legend"),
  li: createDomElementBound("li"),
  link: createDomElementBound("link"),
  main: createDomElementBound("main"),
  map: createDomElementBound("map"),
  mark: createDomElementBound("mark"),
  menu: createDomElementBound("menu"),
  meta: createDomElementBound("meta"),
  meter: createDomElementBound("meter"),
  nav: createDomElementBound("nav"),
  noscript: createDomElementBound("noscript"),
  object: createDomElementBound("object"),
  ol: createDomElementBound("ol"),
  optgroup: createDomElementBound("optgroup"),
  option: createDomElementBound("option"),
  output: createDomElementBound("output"),
  p: createDomElementBound("p"),
  picture: createDomElementBound("picture"),
  pre: createDomElementBound("pre"),
  progress: createDomElementBound("progress"),
  q: createDomElementBound("q"),
  rp: createDomElementBound("rp"),
  rt: createDomElementBound("rt"),
  ruby: createDomElementBound("ruby"),
  s: createDomElementBound("s"),
  samp: createDomElementBound("samp"),
  script: createDomElementBound("script"),
  section: createDomElementBound("section"),
  select: createDomElementBound("select"),
  slot: createDomElementBound("slot"),
  small: createDomElementBound("small"),
  source: createDomElementBound("source"),
  span: createDomElementBound("span"),
  strong: createDomElementBound("strong"),
  style: createDomElementBound("style"),
  sub: createDomElementBound("sub"),
  summary: createDomElementBound("summary"),
  sup: createDomElementBound("sup"),
  table: createDomElementBound("table"),
  tbody: createDomElementBound("tbody"),
  td: createDomElementBound("td"),
  template: createDomElementBound("template"),
  textarea: createDomElementBound("textarea"),
  tfoot: createDomElementBound("tfoot"),
  th: createDomElementBound("th"),
  thead: createDomElementBound("thead"),
  time: createDomElementBound("time"),
  title: createDomElementBound("title"),
  tr: createDomElementBound("tr"),
  track: createDomElementBound("track"),
  u: createDomElementBound("u"),
  ul: createDomElementBound("ul"),
  var: createDomElementBound("var"),
  video: createDomElementBound("video"),
  wbr: createDomElementBound("wbr"),
};

export const {
  a,
  abbr,
  address,
  area,
  article,
  aside,
  b,
  base,
  bdi,
  bdo,
  blockquote,
  br,
  button,
  caption,
  cite,
  code,
  col,
  colgroup,
  data,
  datalist,
  dd,
  del,
  details,
  dfn,
  dialog,
  div,
  dl,
  dt,
  em,
  embed,
  fieldset,
  figcaption,
  figure,
  footer,
  form,
  h1,
  h2,
  h3,
  h4,
  h5,
  h6,
  head,
  header,
  hr,
  html,
  i,
  img,
  input,
  kbd,
  label,
  legend,
  li,
  link,
  main,
  mark,
  meta,
  meter,
  nav,
  noscript,
  object,
  ol,
  optgroup,
  option,
  output,
  p,
  picture,
  pre,
  progress,
  samp,
  section,
  select,
  small,
  span,
  strong,
  sub,
  summary,
  sup,
  table,
  tbody,
  td,
  textarea,
  tfoot,
  th,
  thead,
  title,
  tr,
  ul,
} = xdom;
